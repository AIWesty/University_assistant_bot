from aiogram import Router, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from app.states.feedback import FeedbackForm
from app.database import engine, feedback

from app.logger import get_logger
log = get_logger(__name__)

router = Router() 

@router.message(Command('/feedback')) #—Ç—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –∫–æ–º–∞–Ω–¥—É/—Ç–µ–∫—Å—Ç –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å
@router.message(F.text == 'üí¨ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤')
async def start_feedback_cmd(message: types.Message, state: FSMContext): #—Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
    await message.answer("‚úçÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:")
    await state.set_state(FeedbackForm.message)#–º–µ–Ω—è–µ–º —Å–æ—Å—Ç—è–Ω–∏–µ –Ω–∞ FeedbackForm

#–∑–¥–µ—Å—å –ø—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@router.message(FeedbackForm.message)
async def process_mess_feedback(message: types.Message, state: FSMContext): #–ø—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if message.from_user is not None: 
        tg_id = message.from_user.id
    text = (message.text or "").strip()#–∏–∑ –ø—Ä–∏—à–µ–¥—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç
    
    if not text: 
        await message.answer('‚ùå –û—Ç–∑—ã–≤ –ø—É—Å—Ç–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ —Ö–æ—Ç—è –±—ã –ø–∞—Ä—É —Å–ª–æ–≤ üôÇ')#–µ—Å–ª–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–µ—Ç
        return
    try: 
        async with engine.begin() as conn: 
            await conn.execute(
                feedback.insert().values(
                    tg_id=tg_id,
                    message=text
                )#–ø—ã—Ç–∞–µ–º—Å—è –≤ –±–∞–∑—É —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤
            )
        log.info("Feedback saved: tg_id=%s len=%d", tg_id, len(text))#–ª–æ–≥–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ 
        await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤! –û–Ω —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ —Å–∏—Å—Ç–µ–º–µ üôå")
    except Exception:#–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        log.exception("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å feedback: tg_id=%s", tg_id)
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–∑—ã–≤, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
    finally:
        await state.clear()#–∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è