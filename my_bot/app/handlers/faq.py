from aiogram import Router, F, types
from aiogram.types import CallbackQuery
from app.services.faq_service import get_all_questions, get_answer_by_id
from app.keyboards.faq_keyboard import build_keyboard_faq
from app.logger import get_logger

router = Router()
logger = get_logger(__name__)


# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É "‚ùì FAQ"
@router.message(F.text == "‚ùì FAQ")
async def show_faq(message: types.Message):
    faq_list = await get_all_questions()#–¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä–∫—É
    if not faq_list:#–µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–ª–∏
        await message.answer("‚ùì –ü–æ–∫–∞ –Ω–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –±–∞–∑–µ.")
        return

    kb = build_keyboard_faq(faq_list)  # inline –∫–Ω–æ–ø–∫–∏ faq_{id}, –¥–µ–ª–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤
    await message.answer("üìñ –í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å –≤–æ–ø—Ä–æ—Å:", reply_markup=kb)#–∫–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å –∫–ª–∞–≤–æ–π


# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –≤–æ–ø—Ä–æ—Å
@router.callback_query(F.data.startswith("faq_"))#–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—Å–µ –∏–∑ –∑–∞ callback –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–∞–∂–∞—Ç–∏—è inline –∫–Ω–æ–ø–∫–∏
async def show_faq_answer(callback: CallbackQuery):
    if not callback.data or not callback.message:
        return

    try:
        #–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–µ–ª–∏—Ç—å –≤–µ—Ä–Ω—É–≤—à–∏–µ—Å—è –¥–∞–Ω–Ω—ã–µ 
        parts = callback.data.split("_")
        #–µ—Å–ª–∏ –∏—Ö –¥–ª–∏–Ω–∞ 2 –∏ –≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å - —á–∏—Å–ª–æ
        if len(parts) == 2 and parts[1].isdigit():
            faq_id = int(parts[1])#–±–µ—Ä–µ–º –∞–π–¥–∏—à–Ω–∏–∫(–≤—Ç–æ—Ä—É—é —á–∞—Å—Ç—å)
            answer = await get_answer_by_id(faq_id)#–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–æ –Ω–µ–º—É —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä–∫—É –æ—Ç–≤–µ—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã —Å faq

            if answer:#–µ—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏
                await callback.message.answer(f"üí° {answer}")#–ø–æ—Å—ã–ª–∞–µ–º –æ—Ç–≤–µ—Ç
                logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç –Ω–∞ FAQ %s", callback.from_user.id, faq_id)
            else:
                await callback.message.answer("‚ö†Ô∏è –û—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –ø–æ–∫–∞ –Ω–µ—Ç.")
        else:
            #–∏–Ω–∞—á–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
            await callback.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å FAQ", show_alert=True)

    except Exception as e:
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞.")
        logger.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ FAQ: %s", e)

    await callback.answer()