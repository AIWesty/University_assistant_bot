from aiogram import Router, types
from app.keyboards.main_keyboard import main_menu
from app.logger import get_logger

router = Router()
logger = get_logger(__name__)

@router.message(lambda m: m.text == "‚ÑπÔ∏è –û —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ")
async def about_faculty(message: types.Message):
    if message.from_user:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—Ä–æ—Å–∏–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ")
    await message.answer(
        "üìö –ù–∞—à —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –≥–æ—Ç–æ–≤–∏—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –º–∏—Ä–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è.\n"
        "üîπ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è\n"
        "üîπ –û–ø—ã—Ç–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏\n"
        "üîπ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∫—É—Ä—Å–∞",
        reply_markup=main_menu
    )

@router.message(lambda m: m.text == "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã")
async def documents(message: types.Message):
    await message.answer(
        "–î–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω—É–∂–Ω—ã:\n"
        "1Ô∏è‚É£ –ü–∞—Å–ø–æ—Ä—Ç\n"
        "2Ô∏è‚É£ –ê—Ç—Ç–µ—Å—Ç–∞—Ç\n"
        "3Ô∏è‚É£ –°–ø—Ä–∞–≤–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ï–ì–≠\n"
        "4Ô∏è‚É£ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4 —Ü–≤–µ—Ç–Ω—ã–µ\n"
        "5Ô∏è‚É£ –ó–∞—è–≤–ª–µ–Ω–∏–µ (–æ—Ñ–æ—Ä–º–ª—è–µ—Ç—Å—è –æ–Ω–ª–∞–π–Ω –∏–ª–∏ –≤ –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏)",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã"
@router.message(lambda m: m.text == "üìä –ü—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã")
async def scores(message: types.Message):
    await message.answer(
        "üìä –°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Ö–æ–¥–Ω—ã–µ –±–∞–ª–ª—ã –∑–∞ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥:\n"
        "üíª –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –Ω–∞—É–∫–∏ ‚Äî 235\n"
        "ü§ñ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç ‚Äî 245\n"
        "üîê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî 240\n"
        "üåê –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ‚Äî 230\n"
        "üìä Data Science ‚Äî 250\n"
        "üì± –ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ ‚Äî 228",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏"
@router.message(lambda m: m.text == "üìÖ –°—Ä–æ–∫–∏ –ø–æ–¥–∞—á–∏")
async def deadlines(message: types.Message):
    await message.answer(
        "üìÖ –°—Ä–æ–∫–∏ –ø—Ä–∏—ë–º–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:\n"
        "üîπ –ù–∞—á–∞–ª–æ: 20 –∏—é–Ω—è\n"
        "üîπ –ö–æ–Ω–µ—Ü: 20 –∞–≤–≥—É—Å—Ç–∞\n"
        "–ù–µ –æ–ø–∞–∑–¥—ã–≤–∞–π—Ç–µ üòâ",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"
@router.message(lambda m: m.text == "üìù –ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É")
async def start_form(message: types.Message):
    await message.answer("–î–∞–≤–∞–π—Ç–µ –∑–∞–ø–æ–ª–Ω–∏–º –∞–Ω–∫–µ—Ç—É! ‚úçÔ∏è\n–ù–∞–ø–∏—à–∏—Ç–µ /form, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=main_menu)

